{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE1D,MAAM,OAAO,GAAG,SAAU,CAAC,EAAE;IAC3B,OAAO,IAAI,OAAO,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE;QACtC,UAAU,CAAC,WAAY;YACrB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACvE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;KACd,CAAC,CAAC;CACJ,AAAC;AAEF,uCAAuC;AACvC,gEAAgE;AAChE,8BAA8B;AAC9B,uCAAuC;AACvC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAEnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG,CAEH,MAAM,UAAU,GAAG,UAAY;IAC7B,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,2EAA2E,CAC5E,AAAC;QAEF,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,AAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,EAAE,MAAM,CAAA,EAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAE3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,MAAM,GAAG;YACP,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;SAChC,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,sBAAsB;QACtB,MAAM,MAAM,GAAG,CAAC;;kBAEF,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC;;gBAEvC,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;qEASsC,EACzD,MAAM,CAAC,WAAW,CACnB;;;;;;;oEAOyD,EACxD,MAAM,CAAC,QAAQ,CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCH,EAAE,MAAM,CAAC,WAAW,CACjB,GAAG,CAAC,CAAA,GAAG,GAAI;YACV,OAAO,CAAC;;;;;0CAKsB,EAAE,GAAG,CAAC,QAAQ,CAAC;;yCAEhB,EAAE,GAAG,CAAC,IAAI,CAAC;cACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;;UAGtB,CAAC,CAAC;SACD,CAAC,CACD,IAAI,CAAC,EAAE,CAAC,CAAC;;;;;;;;0CAQsB,EAC9B,MAAM,CAAC,SAAS,CACjB;;;;;gBAKK,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;;IAS/B,CAAC,AAAC;QAEF,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;QAC/B,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KAC1D,CAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtB;CACF,AAAC;AAEF,UAAU,EAAE,CAAC","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n// https://forkify-api.herokuapp.com/api/v2/recipes?search=pizza\n// id=5ed6604591c37cdc054bcd09\n///////////////////////////////////////\nconsole.log('시작점');\n\n/**\n * ? 288강\n * 1.fetch API로 데이터 가져오기\n * 2.async await & json() 사용하기\n * 3.try-catch문 사용하기\n * 4.throw new Error() 사용하기\n * 5.데이터 recipe의 key 이름 전부 바꾸기\n *\n * todo\n * 1) Error 객체의 key가 stack, message가 있다는 것을 확인했다.\n * console.dir을 사용하면 확인 할 수 있다.\n *\n * todo\n * 2) response.ok를 사용해서 throw new Error()를 사용해서 에러를\n * 발견하면 try-catch문에서 에러를 감지해서 catch문에 전달된다.\n *\n * ? 289강\n * 1.index.html 에서 162~254라인의 주석처리된 코드를 복사해서\n * const markup 에 할당한다. 그리고 값을 채운다.\n * 즉 API에서 가져온 데이터를 html에 군데군데 넣어준다.\n *\n * 2.recipeContainer 에 insertAdjacentHTML() 메서드를 이용해서\n * 더미데이터를 .recipe에 추가한다. 데이터가 멋지게 렌더링 된다!\n *\n * todo\n * 1) 첫 시작을 API를 요청한 후, 준비된 HTML 마크업을 이용해서\n * 데이터를 렌더링 하는 것으로 시작되었다. 더미데이터를 이용한 HTML 마크업은\n * 이미 준비되었기 떄문에 동적 데이터를 활용하기 좋다!\n * 2) API url이 단일데이터 렌더링 사용된 이유는 준비된 더미마크업이\n * 1개의 데이터 전용으로 만들어졌기 떄문이다.\n */\n\nconst showRecipe = async () => {\n  try {\n    const response = await fetch(\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcd09'\n    );\n\n    const data = await response.json();\n    if (!response.ok) throw new Error(`${data.message}`);\n    let { recipe } = data.data;\n\n    console.log(recipe);\n\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n\n    console.log(recipe);\n\n    // 2) Rendering recipe\n    const markup = `\n        <figure class=\"recipe__fig\">\n        <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${recipe.title}</span>\n        </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${\n            recipe.cookingTime\n          }</span>\n          <span class=\"recipe__info-text\">minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--people\">${\n            recipe.servings\n          }</span>\n          <span class=\"recipe__info-text\">servings</span>\n\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n        ${recipe.ingredients\n          .map(ing => {\n            return `\n          <li class=\"recipe__ingredient\">\n            <svg class=\"recipe__icon\">\n              <use href=\"src/img/icons.svg#icon-check\"></use>\n            </svg>\n            <div class=\"recipe__quantity\">${ing.quantity}</div>\n            <div class=\"recipe__description\">\n              <span class=\"recipe__unit\">${ing.unit}</span>\n              ${ing.description}\n            </div>\n          </li>\n          `;\n          })\n          .join('')}\n        </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designed and tested by\n          <span class=\"recipe__publisher\">${\n            recipe.publisher\n          }</span>. Please check out\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=\"${recipe.sourceUrl}\"\n          target=\"_blank\"\n        >\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>\n    `;\n\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}